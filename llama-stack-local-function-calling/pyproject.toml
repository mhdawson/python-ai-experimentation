[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "llama-stack-local-function-calling"
version = "1.0.0"
description = "A simple Python application to evaluate function calling with Lllama stack "
authors = [
    {name = "mhdawson", email = "mdawson@devrus.com"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
keywords = ["cuda", "gpu", "verification", "pytorch", "tensorflow", "cupy"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Hardware",
]

# Required dependency for Llama Stack client
dependencies = [
    "llama-stack-client>=0.2.0",
]

dev = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pytest>=7.0.0",
]

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
skip-string-normalization = false
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 120
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # Pyflakes
    "UP", # pyupgrade
    "B",  # flake8-bugbear
    "SIM", # flake8-simplify
    "I",  # isort
    "N",  # pep8-naming
    "C4", # flake8-comprehensions
    "PIE", # flake8-pie
    "RET", # flake8-return
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "PL",  # Pylint
    "RUF", # Ruff-specific rules
]

ignore = [
    "E501",    # Line too long (handled by Black)
    "PLR0913", # Too many arguments
    "PLR0915", # Too many statements
    "PLR2004", # Magic value used in comparison
    "B008",    # Do not perform function calls in argument defaults
    "C901",    # Too complex
    "SIM108",  # Use ternary operator
    "UP007",   # Use X | Y for type annotations
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false 
