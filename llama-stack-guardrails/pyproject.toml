[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "llama-stack-guardrails"
version = "0.1.0"
description = "A Python application for experimenting with Llama Stack guardrails and content safety features"
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
authors = [
    { name = "Michael Dawson", email = "mdawson@devrus.com" },
]
keywords = ["llama", "stack", "guardrails", "ai", "safety", "content-moderation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "annotated-types==0.7.0",
    "anyio==4.9.0",
    "certifi==2025.6.15",
    "charset-normalizer==3.4.2",
    "click==8.2.1",
    "distro==1.9.0",
    "fire==0.7.0",
    "h11==0.16.0",
    "httpcore==1.0.9",
    "httpx==0.28.1",
    "idna==3.10",
    "llama-stack-client==0.2.12",
    "markdown-it-py==3.0.0",
    "mdurl==0.1.2",
    "numpy==2.3.1",
    "pandas==2.3.0",
    "prompt-toolkit==3.0.51",
    "pyaml==25.5.0",
    "pydantic==2.11.7",
    "pydantic-core==2.33.2",
    "pygments==2.19.2",
    "python-dateutil==2.9.0.post0",
    "pytz==2025.2",
    "pyyaml==6.0.2",
    "requests==2.32.4",
    "rich==14.0.0",
    "six==1.17.0",
    "sniffio==1.3.1",
    "termcolor==3.1.0",
    "tqdm==4.67.1",
    "typing-extensions==4.14.0",
    "typing-inspection==0.4.1",
    "tzdata==2025.2",
    "urllib3==2.5.0",
    "wcwidth==0.2.13",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "isort>=5.0",
    "flake8>=6.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.0",
]

[project.scripts]
llama-stack-guardrails = "llama_stack_guardrails:main"

[project.urls]
Homepage = "https://github.com/yourusername/llama-stack-guardrails"
Repository = "https://github.com/yourusername/llama-stack-guardrails.git"
Documentation = "https://github.com/yourusername/llama-stack-guardrails#readme"
"Bug Tracker" = "https://github.com/yourusername/llama-stack-guardrails/issues"

[tool.hatch.version]
path = "llama_stack_guardrails/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["llama_stack_guardrails"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=llama_stack_guardrails",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

# mypy configuration
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "llama_stack_client.*",
    "fire.*",
    "termcolor.*",
]
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
source = ["llama_stack_guardrails"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/*_test.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
